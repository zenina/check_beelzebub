#!/bin/bash

server="http://localhost:8080"
siege="/usr/bin/siege"
return_nrpe(){ 
		return=$1
		shift 1
		message="$@"
		echo "$message"
		exit $return
}

parseOpts(){
options=':w:c:t:s:'

cflag=false
wflag=false
tflag=false
sflag=true
sval=3
while getopts $options opt; do
  case $opt in
    	w)
		echo "-w warning threshold set at $OPTARG" >&2
		wval=${OPTARG}
		wflag=true
		;;

	c)
		echo "-c warning threshold set at $OPTARG" >&2
                cval=${OPTARG}
		cflag=true
		;;
	
	t)
		echo "-t time period set at $OPTARG" >&2
                tval=${OPTARG}
		tflag=true
		;;
	s)
		echo "-s concurrent sessions for siege set at $OPTARG (default: 3)" >&2
                sval=${OPTARG}
		sflag=true
		;;
	\?)
		echo "Invalid option: -$OPTARG" >&2
		return_nrpe 2
		;;

	:  ) 
		echo "Missing option argument for -$OPTARG" >&2
		return_nrpe 2
		;;

	*  ) 
		echo "Unimplemented option: -$OPTARG" >&2
		return_nrpe 2
		;;
  esac
done

## Require flags, and numeric arguments for $OPTARG
if ! $wflag && ! [[ $wval =~ ^-?[0-9]+$ ]];
then
    echo "-w warning_threshold must be specified with integer argument" >&2
    return_nrpe 2
fi
if ! $cflag && ! [[ $cval =~ ^-?[0-9]+$ ]];
then
    echo "-c critical_threshold must be specified with integer argument" >&2
    return_nrpe 2
fi
if ! $tflag && ! [[ $tval =~ ^-?[0-9]+$ ]];
then
    echo "-t timeframe must be specified with argument in seconds" >&2
    return_nrpe 2
fi

}

runSiege(){

scmd="siege -q -c${sval} -t${tval}s -v ${server}"
# Check that our dependency, siege, is installed, and executable
  eval ${scmd} 2>&1 > /dev/null || {
	return_nrpe 2 "[CRITICAL] Could not run siege command ${scmd}"
	} && {
		resptime="$(eval $scmd | grep "Response time" | awk '{print $3}')"
		echo ${resptime}
		resptime="5.4"
	} && {
		# Compare response time value to thresholds using expression floating point conditional operater
 		if $( expr ${resptime} '<=' ${wval} ) ; then 
			return_nrpe 0 "[GREEN] Response Time (avg < ${wval} ): ${resptime}"
#		elif [[ expr ${resptime} >= ${wval} ]] && [[ expr ${avgresptime} <= ${cval} ]] ; then
			return_nrpe 1 "[WARNING]: Response Time (avg > ${wval} ): ${resptime}"
		elif eval expr ${resptime} '>=' ${cval} ; then
			return_nrpe 2 "[CRITICAL]: Response Time (avg > ${cval} ): ${resptime}"
		fi 
	}
}


parseOpts $@
runSiege

