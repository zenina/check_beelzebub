#!/bin/bash
# check_beelzebub_open_files

# set default thresholds. These will be overwritten if arguments are passed through the cli

# warning threshold
wval=20

# critical threshold
cval=50

return_nrpe(){ 
		return="$1"
		shift 1
		message="$@"

		echo -e "$message"
		if [[ -n $return ]]; then
		exit 0 
		else
		exit $return
		fi
}

parseOpts(){
options=':w:c:t:'

cflag=false
wflag=false
while getopts $options opt; do
  case $opt in
    	w)
		wval=${OPTARG}
		wflag=true
		;;

	c)
                cval=${OPTARG}
		cflag=true
		;;
	
	\?)
		echo "Invalid option: -$OPTARG" >&2
		return_nrpe 2
		;;

	:  ) 
		echo "Missing option argument for -$OPTARG" >&2
		return_nrpe 2
		;;

	*  ) 
		echo "Unimplemented option: -$OPTARG" >&2
		return_nrpe 2
		;;
  esac
done

## Require flags, and numeric arguments for $OPTARG
if ! $wflag && ! [[ $wval =~ ^-?[0-9]+$ ]];
then
    return_nrpe 2 "-w warning_threshold must be specified with integer argument"
    
fi
if ! $cflag && ! [[ $cval =~ ^-?[0-9]+$ ]];
then
    return_nrpe 2 "-c critical_threshold must be specified with integer argument"
fi

}


checkFileCount(){
Gtag='\e[92m'
Ytag='\e[93m'
Rtag='\e[31m'
Dtag='\e[39m'
fileCount=$(lsof | grep beelzebub | egrep '.*'.yaml'$' | wc -l)
if [[ -n "${fileCount}" ]]; then
	if [[ "${fileCount}" -lt "${wval}" ]]; then
		return_nrpe 0 "${Gtag}[GREEN]: Transaction file count (< ${wval}): | ${fileCount}${Dtag}"
	elif [[ "${fileCount}" -ge "${wval}" ]] && [[ "${fileCount}" -le "${cval}" ]]; then
		return_nrpe 1 "${Ytag}[WARNING]: Transaction file count (> ${wval}) | ${fileCount}${Dtag}"
	elif [[ "${fileCount}" -ge "${cval}" ]]; then
		return_nrpe 2 "${Rtag}[CRITICAL]: Transaction file count (> ${cval}) | ${fileCount}${Dtaga}"
	fi	
elif [[ -z "${fileCount}" ]]; then
	return_nrpe 2 "[CRITICAL]: No Transaction file count data"
fi
}

## If options passed, push them through to getopts, else use defaults
if [[ $# -gt 0 ]]; then
	parseOpts $@
else
	parseOpts -w ${wval} -c ${cval}
fi
checkFileCount
